# .github/workflows/ci.yml
name: Run Symfony Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2' # Changez selon la version PHP de votre projet
        extensions: mbstring, pdo, pdo_mysql
        ini-values: memory_limit=-1

    - name: Update dependencies
      run: composer update

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Install Symfony PHPUnit Bridge
      run: composer require --dev symfony/phpunit-bridge

    - name: Install Symfony PHPUnit 
      run: composer require --dev phpunit/phpunit

    - name: Make PHPUnit executable
      run: chmod +x ./bin/phpunit

    - name: Check PHPUnit Bridge
      run: |
        ls ./vendor/bin
        ls ./bin

    - name: Create database
      run: php bin/console --env=test doctrine:database:create
      env:
        DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test_db"

    - name: Create tables
      run: php bin/console --env=test doctrine:schema:create
      env:
        DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test_db"

    - name: Load fixtures
      run: php bin/console --env=test doctrine:fixtures:load --no-interaction
      env:
        DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test_db"

    - name: Run PHPUnit tests
      run: ./bin/phpunit --testdox -debug --coverage-text
      env:
        DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test_db"

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1
      with:
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
